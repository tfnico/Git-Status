#!/usr/bin/python

# @desc     Quick script for changing our git urls 
# based on https://github.com/MikePearce/Git-Status
#
# Grab some libraries
import sys
import os
import glob
import commands
from optparse import OptionParser

# Setup some stuff
dirname = './'
gitted  = False

parser = OptionParser(description="\
No options. Just do it.")
parser.add_option("-d", "--dir", 
                    dest    = "dirname", 
                    action  = "store",
                    help    = "The directory to parse sub dirs from", 
                    default = os.path.abspath("./")+"/"
                    )

# Now, parse the args
(options, args) = parser.parse_args()

#-------------------
def show_error(error="Undefined Error!"):
#-------------------
    """Writes an error to stderr"""
    sys.stderr.write(error)
    sys.exit(1)


#-------------------
# Now, onto the main event!
#-------------------
if __name__ == "__main__":
    os.system('clear')
    sys.stdout.write('-- Starting git update-remotes        ...\n')


    sys.stdout.write('Scanning sub directories of %s\n' %options.dirname)

    # See whats here
    for infile in glob.glob( os.path.join(options.dirname, '*') ):

        #is there a .git file
        if os.path.exists( os.path.join(infile, ".git") ):

            #Yay, we found one!
            gitted = True

            # OK, contains a .git file. Let's descend into it
            # and ask git for a status
            out = commands.getoutput('cd '+ infile + '; git status')
            url = commands.getoutput('cd '+ infile + '; git config remote.origin.url')

            if -1 != url.find('git@old.server.com'):
                sys.stdout.write("Convert "+ url + " ---> ")
                # now turn git@viaboxxsystems.de:boxx/ui.git into git@git.viaboxxsystems.de:boxx/ui.git
                reponame = url.split('@')[1].split(':')[1] # repo name
                newurl = ''.join(['git@git.server.com:', reponame])
                sys.stdout.write(newurl+"\n")
                # update remote
                commands.getoutput('cd '+ infile + '; git remote set-url origin '+newurl)

            # Come out of the dir and into the next
            commands.getoutput('cd ../')




    if False == gitted:
        show_error("Error: None of those sub directories had a .git file.\n")

    sys.stdout.write("Done\n")

